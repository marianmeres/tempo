const I=(e=!0)=>({debug:e,log:e,info:e,warn:e,error:e});function r(e,u=null,O=null,C=null){O||(O=console),e!==!1&&(e=`[${e}]`),u===null&&(u=r.CONFIG),u===!0&&(u=I(!0)),u===!1&&(u=I(!1));const n=(l,o)=>{var R,F,G;let a=O;(R=r.CONFIG)!=null&&R.WRITER&&(a=r.CONFIG.WRITER),((F=r.CONFIG)==null?void 0:F.MASTER)!==!1&&((G=r.CONFIG)!=null&&G.MASTER||u!=null&&u[l])&&(typeof C=="function"&&(o=C(o)),a[l].apply(a,e?[e,...o]:[...o]))},t=(...l)=>n("log",l);return t.debug=(...l)=>n("debug",l),t.info=(...l)=>n("info",l),t.warn=(...l)=>n("warn",l),t.error=(...l)=>n("error",l),t.log=t,t}r.CONFIG={debug:!0,log:!0,info:!0,warn:!0,error:!0,MASTER:null,WRITER:null,none:()=>Object.assign(r.CONFIG,I(!1)),all:()=>Object.assign(r.CONFIG,I(!0)),reset:()=>{r.CONFIG.all(),r.CONFIG.MASTER=null,r.CONFIG.WRITER=null}};export{r as c};
